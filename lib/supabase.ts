import { createClient } from "@supabase/supabase-js"
import type { Database } from "./database.types" // Import the generated database types

const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL!
const supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!

// Create a single supabase client for interacting with your database
export const supabase = createClient<Database>(supabaseUrl, supabaseAnonKey)

// Singleton pattern for client-side Supabase client
let supabaseClient: ReturnType<typeof createClient<Database>> | null = null

export const getSupabaseClient = () => {
  if (!supabaseClient) {
    supabaseClient = createClient<Database>(supabaseUrl, supabaseAnonKey)
  }
  return supabaseClient
}

// Removed the inline Database type definition as it will be imported from database.types.ts
// This file will be generated by Supabase CLI or similar tool based on your schema.
// For now, we'll assume it exists or will be generated.
